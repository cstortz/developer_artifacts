[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ai-powered-project"
version = "0.1.0"
description = "An AI-powered Python project"
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
authors = [
    { name = "Your Name", email = "your.email@example.com" }
]
dependencies = [
    "openai>=1.12.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.6.0",
    "fastapi>=0.109.0",
    "uvicorn>=0.27.0",
    "pytest>=8.0.0",
    "black>=24.1.0",
    "isort>=5.13.0",
    "mypy>=1.8.0",
    "ruff>=0.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest-cov>=4.1.0",
    "pre-commit>=3.6.0",
    "jupyter>=1.0.0",
    "sphinx>=7.2.0",
    "sphinx-rtd-theme>=2.0.0",
    "sphinx-autodoc-typehints>=1.25.0",
    "sphinx-copybutton>=0.5.0",
    "sphinx-design>=0.5.0",
    "myst-parser>=2.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.5.0",
    "coverage>=7.4.0",
    "tox>=4.15.0",
    "nox>=2024.2.0",
]

# Code formatting
[tool.black]
line-length = 88
target-version = ["py311"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

# Type checking
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

# Linting
[tool.ruff]
line-length = 88
target-version = "py311"
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "B",   # flake8-bugbear
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "PL",  # pylint
    "RUF", # ruff-specific rules
    "C4",  # flake8-comprehensions
    "T10", # flake8-debugger
    "T20", # flake8-print
    "TID", # flake8-tidy-imports
    "TCH", # flake8-type-checking
    "ERA", # eradicate
    "PD",  # pandas-vet
    "PGH", # pygrep-hooks
    "TRY", # tryceratops
]
ignore = []

# Testing
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=src --cov-report=term-missing --cov-report=html"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Documentation
[tool.sphinx]
project = "AI-Powered Project"
copyright = "2024, Your Name"
author = "Your Name"
extensions = [
    "sphinx.ext.autodoc",
    "sphinx.ext.napoleon",
    "sphinx.ext.viewcode",
    "sphinx.ext.intersphinx",
    "sphinx.ext.todo",
    "sphinx.ext.coverage",
    "sphinx_rtd_theme",
    "sphinx_autodoc_typehints",
    "sphinx_design",
    "myst_parser",
]
html_theme = "sphinx_rtd_theme"
html_static_path = ["_static"]
intersphinx_mapping = {
    "python": ("https://docs.python.org/3", None),
    "numpy": ("https://numpy.org/doc/stable/", None),
    "pandas": ("https://pandas.pydata.org/docs/", None),
    "scikit-learn": ("https://scikit-learn.org/stable/", None),
    "torch": ("https://pytorch.org/docs/stable/", None),
    "tensorflow": ("https://www.tensorflow.org/api_docs/python", None),
} 